on:
  workflow_call:
    inputs:
      workshop-id:
        required: true
        type: string
    secrets:
      STEAM_USERNAME:
        required: true
      STEAM_PASSWORD:
        required: true
jobs:
  Workshop-Update:
    name: Workshop Update
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      STEAM_USERNAME: ${{ secrets.STEAM_USERNAME }}
      STEAM_PASSWORD: ${{ secrets.STEAM_PASSWORD }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Fetch .NET 6
      run: |
        sudo apt update
        sudo apt install dotnet6
    - name: Fetch gmodws
      run: |
        wget https://github.com/Meachamp/gmodws/releases/download/v1.5/gmodws.zip
        unzip gmodws.zip -d tools
        chmod +x ./tools/gmodws
    - name: Fetch DepotDownloader
      run: |
        wget https://github.com/SteamRE/DepotDownloader/releases/download/DepotDownloader_2.4.7/depotdownloader-2.4.7.zip
        unzip depotdownloader-2.4.7.zip -d tools
    - name: Fetch GMAD
      run: |
        echo "bin/gmad_linux" > gmad_files.txt
        dotnet ./tools/DepotDownloader.dll -app 4000 -depot 4003 -username $STEAM_USERNAME -password $STEAM_PASSWORD -filelist gmad_files.txt -dir gmod
        chmod +x ./gmod/bin/gmad_linux
    - name: Prepare package
      run: |
        ./CI/PreparePackage.sh
    - name: Get Version
      id: parser
      if: "contains(github.ref, 'release-')"
      uses: johngeorgewright/parse-version-action@v1.0.2
      with:
        ref: ${{ github.ref }}
        trim-start: release-v
    - name: Patch Workshop Info
      run: |
        echo -e '\n-- Set by CI' >> publish/gamemodes/lambda/gamemode/sh_lambda_build.lua
        echo -e 'GM.WorkshopID = "${{ inputs.workshop-id }}"' >> publish/gamemodes/lambda/gamemode/sh_lambda_build.lua
        echo -e 'GM.WorkshopBuild = true' >> publish/gamemodes/lambda/gamemode/sh_lambda_build.lua
    - name: Patch Workshop Version
      if: "contains(github.ref, 'release-')"
      run: |
        echo -e 'GM.Version = "${{ steps.parser.outputs.version }}"' >> publish/gamemodes/lambda/gamemode/sh_lambda_build.lua
    - name: Dump Workshop Info
      run: |
        cat publish/gamemodes/lambda/gamemode/sh_lambda_build.lua
    - name: Create GMA
      run: |
        ./gmod/bin/gmad_linux create -folder publish -out lambda.gma
    - name: Upload to Workshop
      run: |
        echo "Updating workshop entry ${{ inputs.workshop-id }}"
        ./tools/gmodws "$STEAM_USERNAME" ${{ inputs.workshop-id }} lambda.gma
